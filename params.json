{"name":"Npreachability","tagline":"Reachability without the suck.","body":"#NPReachability\r\n- Originally By [Nick Paulson](http://twitter.com/nckplsn)\r\n- KVO support added by [Adam Ernst](http://www.adamernst.com/)\r\n- ARC support and changes to the interface by\r\n  [Abizer Nasir](http://abizern.org), and now I seem to be the project\r\n  maintainer.\r\n  \r\n\r\nNPReachability is an evolution of Apple's Reachability class that provides\r\ninformation about the network status.\r\n\r\nAs well as supporting the original's Notification based monitoring, this class\r\nsupports both KVO and Blocks, so you can choose whichever way of handling\r\nchanges as your application requires.\r\n\r\nThis class is written as a singleton, so be sure to reference it as\r\n\r\nNPReachability *reachability = [NPReachability sharedInstance];\r\n\r\nMake sure you maintain a strong reference to at least one object of this class\r\nor else ARC will clean it up underneach you.\r\n \r\n## Block support\r\n\r\nHandlers are declared as\r\n\r\n    typedef void (^ReachabilityHandler)(NPReachability *curReach);\r\n\r\nThis takes the NPReachability object as a parameter. As originally written\r\nthis class passed the `SCNetworkReachabilityFlags` as a parameter, but you can\r\nget that and more by messaging the object directly\r\n\r\nYou add blocks to be executed when the network status changes by using:\r\n\r\n    - (id)addHandler:(ReachabilityHandler)handler;\r\n\r\nThis returns an opaque object which you should use to remove the handler at the\r\nappropriate time (in a `dealloc`, say) with:\r\n\r\n    - (void)removeHandler:(id)opaqueObject;\r\n\r\n## KVO support\r\n\r\nTwo properties can observed for changes to the network status:\r\n\r\n    @property (nonatomic, readonly, getter=isCurrentlyReachable) BOOL currentlyReachable;\r\n\t@property (nonatomic, readonly) SCNetworkReachabilityFlags currentReachabilityFlags;\r\n\r\n## NSNotification\r\n\r\nWhen the network status changes a `NPReachabilityChangedNotification` is sent\r\nwith the NPReachability instance as the notification object.\r\n\r\n## Dependencies\r\n\r\n- Xcode 5.0+ for ARC support, automatic synthesis and compatibility\r\n  libraries. This might work for Xcode 4.2+, but I haven't been able to test it.\r\n- The SystemConfiguration Framework should be added to your project.\r\n\r\n## Usage\r\n\r\n### Git\r\n\r\nAdd the project as a submodule to your project's repository and add the\r\n`NPReachability.h` and `NPReachability.m` files to your project.\r\n\r\n### CocoaPods\r\n\r\nThis is also available as a CocoaPod. If you're a Podder, then you already know\r\nwhat to do to add this to your project.\r\n\r\n### Direct files\r\n\r\nJust add the `NPReachability.h` and `NPReachability.m` files to your\r\nproject. But I think any of the previous two methods are preferable to\r\nthis.\r\n\r\n## Example\r\n\r\nApple provided the Reachability Sample Code to demonstrate the use of their\r\n`Reachability` class. To see how to use this Class instead have a look at\r\n[NPReachability-Example](https://github.com/Abizern/NPReachability-Example)\r\nwhich shows the same project using `NPReachability` instead.\r\n\r\n## And finally...\r\n\r\nPlease use and improve! Patches accepted, or create an issue.\r\n\r\nI'd love it if you could send me a note as to which app you're using it with!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}